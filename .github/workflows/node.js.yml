name: Full Stack CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies
      run: npm install
      working-directory: ./back  # Specify the correct directory here
    
    - name: Check for test files
      id: check-tests
      run: |
        if ls ./front/*.test.js 1> /dev/null 2>&1; then
          echo "Tests found, setting run_tests to true."
          echo "::set-output name=run_tests::true"
        else
          echo "No tests found, setting run_tests to false."
          echo "::set-output name=run_tests::false"
        fi
      working-directory: .

    - name: Run the tests
      if: steps.check-tests.outputs.run_tests == 'true'
      run: npm test
      working-directory: ./back  # Specify the correct directory here

    - name: Start
      run: npm run start
      working-directory: ./back  # Specify the correct directory here

  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install
      working-directory: ./front  # Specify the correct directory here

    - name: Check for test files
      id: check-tests
      run: |
        if ls ./front/*.test.js 1> /dev/null 2>&1; then
          echo "Tests found, setting run_tests to true."
          echo "::set-output name=run_tests::true"
        else
          echo "No tests found, setting run_tests to false."
          echo "::set-output name=run_tests::false"
        fi
      working-directory: .

    - name: Run the tests
      if: steps.check-tests.outputs.run_tests == 'true'
      run: npm test
      working-directory: ./front  # Specify the correct directory here

    - name: Build
      run: npm run build
      working-directory: ./front  # Specify the correct directory here